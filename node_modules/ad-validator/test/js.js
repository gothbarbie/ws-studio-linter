const assert = require( 'assert' );
const acorn = require( 'acorn' );

const Pos = require( '../lib/position.js' );
const js = require( '../' ).js;

module.exports = function () {
	it( 'rejects syntax errors', function () {
		assert.deepEqual( js( '\nvar a = ;' ), [
			{
				start: {
					index: 9,
					line: 1,
					column: 8
				},
				end: {
					index: 10,
					line: 1,
					column: 9
				},
				message: `SyntaxError: Unexpected token (2:8)`
			}
		]);
	});

	it( 'rejects global variables/functions', function () {
		assert.deepEqual( js( 'var a = 1; function b () { var c = 2; }' ), [
			{
				start: {
					index: 4,
					line: 0,
					column: 4
				},
				end: {
					index: 5,
					line: 0,
					column: 5
				},
				message: `Global variable 'a' is missing WS_DYN_INS_RAND`
			},
			{
				start: {
					index: 20,
					line: 0,
					column: 20
				},
				end: {
					index: 21,
					line: 0,
					column: 21
				},
				message: `Global variable 'b' is missing WS_DYN_INS_RAND`
			}
		]);
	});

	it( 'rejects line comments', function () {
		assert.deepEqual( js( `
// this is all about music
"jazz" + "funk"; // dude!
// yao` ), [
			{
				start: {
					index: 1,
					line: 1,
					column: 0
				},
				end: {
					index: 27,
					line: 1,
					column: 26
				},
				message: `line comments aren't allowed`
			},
			{
				start: {
					index: 45,
					line: 2,
					column: 17
				},
				end: {
					index: 53,
					line: 2,
					column: 25
				},
				message: `line comments aren't allowed`
			},
			{
				start: {
					index: 54,
					line: 3,
					column: 0
				},
				end: {
					index: 60,
					line: 3,
					column: 6
				},
				message: `line comments aren't allowed`
			}
		]);
	});

	it( 'does not reject // in strings', function () {
		assert.deepEqual( js( `"http://example.com"` ), [] );
	});

	it( 'does not reject single quotes', function () {
		assert.deepEqual( js( `s = 'An 18 char string.'` ), [] );
	});
};
